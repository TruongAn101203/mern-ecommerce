import React, { useState, useEffect } from "react"; 
import { Routes, Route, Navigate } from "react-router-dom";
// ƒê·∫£m b·∫£o import c√°c component cho Layout
import Navbar from "./components/Navbar.jsx";
import Sidebar from "./components/Sidebar.jsx"; 
import Login from "./components/Login.jsx"; 
import List from "./pages/List.jsx";
import Add from "./pages/Add.jsx";
import Edit from "./pages/Edit.jsx";
import Orders from "./pages/Orders.jsx";

// X√≥a ProtectedRoute v√¨ logic ƒë∆∞·ª£c x·ª≠ l√Ω tr·ª±c ti·∫øp trong App()

function App() {
  // üîë S·ª¨ D·ª§NG STATE: Component App s·∫Ω render l·∫°i khi token thay ƒë·ªïi
  const [token, setToken] = useState(localStorage.getItem("token") || ""); 
  const [isSidebarOpen, setIsSidebarOpen] = useState(true);

  // üîÑ Theo d√µi s·ª± thay ƒë·ªïi c·ªßa state token v√† c·∫≠p nh·∫≠t localStorage
  useEffect(() => {
    if (token) {
      localStorage.setItem("token", token);
    } else {
      localStorage.removeItem("token");
    }
  }, [token]);
  
  const toggleSidebar = () => setIsSidebarOpen(prev => !prev);


  if (!token) {
    // === TR·∫†NG TH√ÅI 1: CH∆ØA ƒêƒÇNG NH·∫¨P ===
    // CH·ªà CH·ª®A routes li√™n quan ƒë·∫øn Login.
    return (
      <div className="app">
        <Routes>
          {/* Ch·ªâ hi·ªÉn th·ªã Login */}
          <Route path="/login" element={<Login setToken={setToken} />} />
          
          {/* Redirect m·ªçi route kh√°c (bao g·ªìm c·∫£ '/') v·ªÅ /login */}
          <Route path="*" element={<Navigate to="/login" replace />} /> 
        </Routes>
      </div>
    );
  }

  // === TR·∫†NG TH√ÅI 2: ƒê√É ƒêƒÇNG NH·∫¨P (token t·ªìn t·∫°i) ===
  // Hi·ªÉn th·ªã Dashboard Layout v√† c√°c Admin Routes
  return (
    <div className="flex h-screen bg-gray-50 overflow-hidden">
      {/* 1. Sidebar */}
      <div 
        className={`fixed inset-y-0 left-0 z-30 transform ${
          isSidebarOpen ? 'translate-x-0' : '-translate-x-full'
        } transition-transform duration-300 ease-in-out md:relative md:translate-x-0 w-64 flex-shrink-0`}
      >
        <Sidebar />
      </div>
      
      <div className="flex flex-col flex-1 w-full overflow-y-auto">
        {/* 2. Navbar */}
        <Navbar setToken={setToken} toggleSidebar={toggleSidebar} isSidebarOpen={isSidebarOpen} />

        {/* 3. Main Content Area */}
        <main className="flex-1 p-4">
          <Routes>
              {/* Route g·ªëc chuy·ªÉn h∆∞·ªõng ƒë·∫øn /list */}
              <Route path="/" element={<Navigate to="/list" replace />} /> 
              {/* C√°c route Admin */}
              <Route path="/list" element={<List />} /> 
              <Route path="/add" element={<Add />} />
              <Route path="/edit/:id" element={<Edit />} />
              <Route path="/orders" element={<Orders />} />
              
              {/* N·∫øu c·ªë truy c·∫≠p /login khi ƒë√£ ƒëƒÉng nh·∫≠p, chuy·ªÉn h∆∞·ªõng v·ªÅ /list */}
              <Route path="/login" element={<Navigate to="/list" replace />} /> 
              
              {/* Route 404 - chuy·ªÉn h∆∞·ªõng v·ªÅ /list */}
              <Route path="*" element={<Navigate to="/list" replace />} />
          </Routes>
        </main>
      </div>
    </div>
  );
}

export default App;
